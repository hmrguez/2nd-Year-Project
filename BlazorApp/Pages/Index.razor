@page "/"


<PageTitle>Domino</PageTitle>

<BSNav IsTabs="true">
    <BSNavItem>
        <TabLabel><span class="oi oi-play-circle"></span> Play</TabLabel>
        <TabContent>
            <div class="container">
                <div class="row row-col-3">
                    <div class="col-3" style="padding-top: 25px;">
                        <div  Class="@BS.Form_Check @BS.Form_Switch">
                            <BSInputCheckbox CheckedValue="@("on")" @bind-Value="Tournament" style="font-size: 25px;"/>
                            <BSLabel IsCheckLabel="true" style="font-size: 25px;">Tournament</BSLabel>
                        </div>
                    </div>
                    <div class="col" style="text-align: center; padding-top: 150px">
                        <h1 class="btn-main"><span>Domino</span><i></i></h1>
                        <BSButton class="btn-main" Color="BSColor.Primary" style="font-size: 25px;" @onclick="Play"><span>Play</span><i></i></BSButton>
                    </div>
                    <div class="col-3" style="padding-top: 25px;">
                    </div>
                </div>
            </div>
            @* <div class="container">
                    <div class="row">
                        <div class="col-8">
                            <textarea disabled = "true">
                                @foreach (var game in Games)
                                {
                                    @foreach (var plays in game.Rounds)
                                    {
                                        @if(plays.Piece!=null){
                                            <p class="text-center">@plays.Piece.ToString()</p>
                                        }
                                    }
                                }
                            </textarea>
                        </div>
                        <div class="col-4">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th scope="col">Player</th>
                                        <th scope="col">Score</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    //Mostrar los players con sus Scores
                                    @foreach (var item in collection)
                                    {
                                        
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div> *@
        </TabContent>
    </BSNavItem>

    <BSNavItem>
        <TabLabel><span class="oi oi-cog"></span> Settings</TabLabel>
        <TabContent>
            <div class="container" style="padding-top: 20px;">
                <EditForm Model="@Values">
                    <div class="row row-cols-5">
                        <div class="col">
                            <h3>Winnable</h3>
                            <InputRadioGroup @bind-Value="Values.Winnable">
                                @foreach (var item in settingsList.Winnables) {
                                    <div>
                                        <input id="@item.ToString()" name="radioWin" type="radio" value="@item.ToString()"/>
                                        <label for="@item.ToString()">@item.ToString()</label>
                                    </div>
                                }
                            </InputRadioGroup>
                        </div>
                        <div class="col">
                            <h3>Rounder</h3>
                            <InputRadioGroup @bind-Value="Values.Rounder">
                                @foreach (var item in settingsList.Rounders) {
                                    <div>
                                        <input id="@item.ToString()" name="radioRounder" type="radio" value="@item.ToString()"/>
                                        <label for="@item.ToString()">@item.ToString()</label>
                                    </div>
                                }
                            </InputRadioGroup>
                        </div>
                        <div class="col">
                            <h3>Shuffler</h3>
                            <InputRadioGroup @bind-Value="Values.Shuffler">
                                @foreach (var item in settingsList.Shufflers) {
                                    <div>
                                        <input id="@item.ToString()" name="radioShuffler" type="radio" value="@item.ToString()"/>
                                        <label for="@item.ToString()">@item.ToString()</label>
                                    </div>
                                }
                            </InputRadioGroup>
                        </div>
                        <div class="col">
                            <h3>HandCounter</h3>
                            <InputRadioGroup @bind-Value="Values.HandCounter">
                                @foreach (var item in settingsList.HandCounters) {
                                    <div>
                                        <input id="@item.ToString()" name="radioHand" type="radio" value="@item.ToString()"/>
                                        <label for="@item.ToString()">@item.ToString()</label>
                                    </div>
                                }
                            </InputRadioGroup>
                        </div>
                        <div class="col">
                            <h3>Board</h3>
                            <InputRadioGroup @bind-Value="Values.Board">
                                @foreach (var item in settingsList.Boards) {
                                    <div>
                                        <input id="@item.ToString()" name="radioBoards" type="radio" value="@item.ToString()"/>
                                        <label for="@item.ToString()">@item.ToString()</label>
                                    </div>
                                }
                            </InputRadioGroup>
                        </div>
                    </div>
                    <div class="row" style="padding-top: 50px;">
                        <div class="col" style="text-align: center;">
                            <button class= "btn-main" type="submit"><span>Save</span><i></i></button>
                        </div>
                    </div>
                </EditForm>
            </div>
            
        </TabContent>
    </BSNavItem>

    <BSNavItem>
        <TabLabel><span class="oi oi-question-mark"></span> Help</TabLabel>
        <TabContent>
            <div class="container">
                <div class="row">
                    <div class="col">
                        <h1>Domino</h1>
                    </div>
                </div>
            </div>
        </TabContent>
    </BSNavItem>
</BSNav>



@code {

    #region Play
        private string? Tournament {get;set;}
        private GameObject[]? Games {get;set;}

        private void Play()
        {
            ChangedThings changes = new ChangedThings(Values.GetBoard()!, Values.GetWinnable()!, Values.GetRounder()!, 
                                                        Values.GetShuffler()!, Values.GetHandCounter()!);

            if(TournamentClass.IsTournament(Tournament!))
            {
                Games = MakingGame.MakingGames(changes, 3);
                TournamentClass.PlayTournament(Games, new PlayGame());
            }
            else
            {
                Games = MakingGame.MakingGames(changes, 1);
                TournamentClass.PlayTournament(Games, new PlayGame());
            }
        }

    #endregion

    #region Settings
        public Value Values{get; set;} = new ();
        private SettingsList settingsList{ get;} = new SettingsList();

    #endregion
}
