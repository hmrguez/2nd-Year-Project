@page "/"


<PageTitle>Domino</PageTitle>

<BSNav IsTabs="true">
    <BSNavItem>
        <TabLabel><span class="oi oi-play-circle"></span> Play</TabLabel>
        <TabContent>
            <div class="container @(Playing ? "d-none" : "")">
                <div class="row row-col-3">
                    <div class="col-3" style="padding-top: 25px;">
                        <div  Class="@BS.Form_Check @BS.Form_Switch">
                            <BSInputCheckbox CheckedValue="@("on")" @bind-Value="Tournament" style="font-size: 25px;"/>
                            <BSLabel IsCheckLabel="true" style="font-size: 25px;">Tournament</BSLabel>
                        </div>
                    </div>
                    <div class="col" style="text-align: center; padding-top: 150px">
                        <h1 class="Domino">Domino</h1>
                        <BSButton class="btn-main" Color="BSColor.Primary" style="font-size: 25px;" @onclick="@Play"><span>Play</span><i></i></BSButton>
                    </div>
                    <div class="col-3" style="padding-top: 25px;">
                    </div>
                </div>
            </div>
            <div class="container @(!Playing ? "d-none" : "")">
                <div class="contain">
                    <button type="button" class="btn-main" @onclick="@PiecesOnBoard"><span>ShowPlays</span><i></i></button>
                    <h1 style="font-weight: bold;">Winner: @Winner</h1>
                    <h2 style="font-weight: bold;">Game: @Count</h2>
                </div>
                <div class="row">
                    <div class="col-8">
                        <p>@PiecesBoard</p>
                    </div>
                    <div class="col-4">
                        @if(Table != null){
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th scope="col" style="font-weight: bold;">Player</th>
                                        <th scope="col" style="font-weight: bold;">Score</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Table)
                                    {
                                        <tr>
                                            <td>@item.Key.ToString()</td>
                                            <td>@item.Value.ToString()</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                    </div>
                </div>
            </div> 
        </TabContent>
    </BSNavItem>

    <BSNavItem>
        <TabLabel><span class="oi oi-cog"></span> Settings</TabLabel>
        <TabContent>
            <div class="container" style="padding-top: 20px;">
                <EditForm Model="@Values" OnSubmit="@Save">
                    <div class="row row-cols-5">
                        <div class="col">
                            <h3>Winnable</h3>
                            <InputRadioGroup @bind-Value="Values.Winnable">
                                @{
                                    bool isFirstChecked = true;
                                    @foreach (var item in settingsList.Winnables) {
                                        <div>
                                            @if(isFirstChecked)
                                            {
                                                isFirstChecked=false;
                                                <input type="radio" id="@item" name="radioWin" value="@item" checked/>
                                                <label for="@item">@item</label>
                                            }else{
                                                <input type="radio" id="@item" name="radioWin" value="@item"/>
                                                <label for="@item">@item</label>
                                            }
                                        </div>
                                    }
                                }
                            </InputRadioGroup>
                        </div>
                        <div class="col">
                            <h3>Rounder</h3>
                            <InputRadioGroup @bind-Value="Values.Rounder">
                                 @{
                                    bool isFirstChecked = true;
                                    @foreach (var item in settingsList.Rounders) {
                                        <div>
                                            @if(isFirstChecked)
                                            {
                                                isFirstChecked=false;
                                                <input type="radio" id="@item" name="radioRounder" value="@item" checked/>
                                                <label for="@item">@item</label>
                                            }else{
                                                <input type="radio" id="@item" name="radioRounder" value="@item"/>
                                                <label for="@item">@item</label>
                                            }
                                            
                                        </div>
                                    }
                                }
                            </InputRadioGroup>
                        </div>
                        <div class="col">
                            <h3>Shuffler</h3>
                            <InputRadioGroup @bind-Value="Values.Shuffler">
                                 @{
                                    bool isFirstChecked = true;
                                    @foreach (var item in settingsList.Shufflers) {
                                        <div>
                                            @if(isFirstChecked)
                                            {
                                                isFirstChecked=false;
                                                <input type="radio" id="@item" name="radioShuffler" value="@item" checked/>
                                                <label for="@item">@item</label>
                                            }else{
                                                <input type="radio" id="@item" name="radioShuffler" value="@item"/>
                                                <label for="@item">@item</label>
                                            }
                                            
                                        </div>
                                    }
                                }
                            </InputRadioGroup>
                        </div>
                        <div class="col">
                            <h3>HandCounter</h3>
                            <InputRadioGroup @bind-Value="Values.HandCounter">
                                @{
                                    bool isFirstChecked = true;
                                    @foreach (var item in settingsList.HandCounters) {
                                        <div>
                                            @if(isFirstChecked)
                                            {
                                                isFirstChecked=false;
                                                <input type="radio" id="@item" name="radioHand" value="@item" checked/>
                                                <label for="@item">@item</label>
                                            }else{
                                                <input type="radio" id="@item" name="radioHand" value="@item"/>
                                                <label for="@item">@item</label>
                                            }
                                            
                                        </div>
                                    }
                                }
                            </InputRadioGroup>
                        </div>
                        <div class="col">
                            <h3>Board</h3>
                            <InputRadioGroup @bind-Value="Values.Board">
                                @{
                                    bool isFirstChecked = true;
                                    @foreach (var item in settingsList.Boards) {
                                        <div>
                                            @if(isFirstChecked)
                                            {
                                                isFirstChecked=false;
                                                <input type="radio" id="@item" name="radioBoard" value="@item" checked/>
                                                <label for="@item">@item</label>
                                            }else{
                                                <input type="radio" id="@item" name="radioBoard" value="@item"/>
                                                <label for="@item">@item</label>
                                            }
                                            
                                        </div>
                                    }
                                }
                            </InputRadioGroup>
                        </div>
                    </div>
                    <div class="row" style="padding-top: 50px;">
                        <div class="col" style="text-align: center;">
                            <button class= "btn-main" type="submit"><span>Save</span><i></i></button>
                        </div>
                    </div>
                </EditForm>
            </div>
            
        </TabContent>
    </BSNavItem>

    <BSNavItem>
        <TabLabel><span class="oi oi-question-mark"></span> Help</TabLabel>
        <TabContent>
            <div class="container">
                <div class="row">
                    <div class="col">
                        <h1>Domino</h1>
                    </div>
                </div>
            </div>
        </TabContent>
    </BSNavItem>
</BSNav>



@code {

#region Play
    private Dictionary<string, int>? Table{get;set;}
    private bool Playing { get; set; } = false;
    private int Count{get;set;}
    private Value? MarkedValues{get;set;}
    private string? PiecesBoard{get;set;}
    private string? Winner{get;set;}
    private void PiecesOnBoard(){

        if(Count < Games!.Length)
        {
            PiecesBoard = string.Empty;
            foreach (var play in Games[Count].Changes.Board.PiecesOnBoard!)
            {
                PiecesBoard += (play + " ");
            }
            Winner = Games[Count].Winner!.ToString();
            Table![Games![Count].Winner!.ToString()!]+=1;
            Count++;
        }
    }
    private string? Tournament {get;set;} = "off";
    private GameObject[]? Games {get;set;}

    private void Play()
    {
        if(MarkedValues != null){
            Playing = true;
            if(TournamentClass.IsTournament(Tournament!))
            {
                Games = MakingGame.MakingGames(MarkedValues, 3);
                TournamentClass.PlayTournament(Games, new PlayGame());
            }
            else
            {
                Games = MakingGame.MakingGames(MarkedValues, 1);
                TournamentClass.PlayTournament(Games, new PlayGame());
            }
            CreatingTable(Games[Count].Players);
        }
    }
    private void CreatingTable(IPlayer[] players)
    {
        Table = new Dictionary<string, int>();
        foreach (var player in players)
        {
            Table.Add(player.ToString()!, 0);
        }
    }
#endregion

#region Settings
    public Value Values{get; set;} = new ();
    private SettingsList settingsList{ get;} = new SettingsList();
    private void Save()
    {
        MarkedValues = new Value(Values.Winnable!, Values.Rounder!, Values.Shuffler!, Values.HandCounter!, Values.Board!);
    }

#endregion
}